{
  "version": "1.1.5",
  "modules": [
    {
      "id": 1,
      "plugin": "Core",
      "version": "1.1.5",
      "model": "AudioInterface",
      "params": [],
      "leftModuleId": 2,
      "rightModuleId": 8,
      "data": {
        "audio": {
          "driver": 5,
          "deviceName": "Apple Inc.: Built-in Output",
          "offset": 0,
          "maxChannels": 8,
          "sampleRate": 44100,
          "blockSize": 256
        }
      },
      "pos": [
        59,
        0
      ]
    },
    {
      "id": 2,
      "plugin": "Fundamental",
      "version": "1.2.1",
      "model": "VCMixer",
      "params": [
        {
          "id": 0,
          "value": 1.0
        },
        {
          "id": 1,
          "value": 0.397544682
        },
        {
          "id": 2,
          "value": 0.732713282
        },
        {
          "id": 3,
          "value": 1.0
        },
        {
          "id": 4,
          "value": 1.0
        }
      ],
      "leftModuleId": 7,
      "rightModuleId": 1,
      "pos": [
        49,
        0
      ]
    },
    {
      "id": 4,
      "plugin": "Fundamental",
      "version": "1.2.1",
      "model": "VCF",
      "params": [
        {
          "id": 0,
          "value": 0.0
        },
        {
          "id": 1,
          "value": 0.5
        },
        {
          "id": 2,
          "value": 0.261999875
        },
        {
          "id": 3,
          "value": 1.0
        },
        {
          "id": 4,
          "value": 0.13199994
        }
      ],
      "rightModuleId": 17,
      "pos": [
        30,
        1
      ]
    },
    {
      "id": 6,
      "plugin": "Fundamental",
      "version": "1.2.1",
      "model": "ADSR",
      "params": [
        {
          "id": 0,
          "value": 0.403500199
        },
        {
          "id": 1,
          "value": 0.743000448
        },
        {
          "id": 2,
          "value": 0.5
        },
        {
          "id": 3,
          "value": 0.576500058
        }
      ],
      "leftModuleId": 26,
      "rightModuleId": 7,
      "pos": [
        28,
        0
      ]
    },
    {
      "id": 7,
      "plugin": "Fundamental",
      "version": "1.2.1",
      "model": "Scope",
      "params": [
        {
          "id": 0,
          "value": 0.0
        },
        {
          "id": 1,
          "value": 0.0
        },
        {
          "id": 2,
          "value": 0.0
        },
        {
          "id": 3,
          "value": 0.0
        },
        {
          "id": 4,
          "value": 14.0
        },
        {
          "id": 5,
          "value": 0.0
        },
        {
          "id": 6,
          "value": 0.0
        },
        {
          "id": 7,
          "value": 0.0
        }
      ],
      "leftModuleId": 6,
      "rightModuleId": 2,
      "data": {
        "lissajous": 0,
        "external": 0
      },
      "pos": [
        36,
        0
      ]
    },
    {
      "id": 8,
      "plugin": "Core",
      "version": "1.1.5",
      "model": "Notes",
      "params": [],
      "leftModuleId": 1,
      "text": "patch instructions:\n\n1. Choose an audio driver and device in the AUDIO-8 module.\n\n2. Drag knobs up/down. Hold Ctrl (Cmd on Mac) while dragging to fine-tune. Right-click knobs to edit, or double-click to initialize.\n\n3. Drag ports to create and move 3ables. Stack multiple cables on outputs by holding Ctrl (Cmd on Mac) and dragging from an output.\n\n4. Right-click on an empty rack space to add new modules.",
      "pos": [
        69,
        0
      ]
    },
    {
      "id": 17,
      "plugin": "VCV-Prototype",
      "version": "1.1.1",
      "model": "Prototype",
      "params": [
        {
          "id": 0,
          "value": 0.752499998
        },
        {
          "id": 1,
          "value": 0.0
        },
        {
          "id": 2,
          "value": 0.0
        },
        {
          "id": 3,
          "value": 0.0
        },
        {
          "id": 4,
          "value": 0.0
        },
        {
          "id": 5,
          "value": 0.0
        },
        {
          "id": 6,
          "value": 0.0
        },
        {
          "id": 7,
          "value": 0.0
        },
        {
          "id": 8,
          "value": 0.0
        },
        {
          "id": 9,
          "value": 0.0
        },
        {
          "id": 10,
          "value": 0.0
        },
        {
          "id": 11,
          "value": 0.0
        }
      ],
      "leftModuleId": 4,
      "data": {
        "path": "/Users/mp/_gitshows/gitShow2/module2.js",
        "script": "\nconfig.frameDivider = 1\n// set buffersize of module\nconfig.bufferSize = 16\n\nvar phase = 0\nvar amp = 1\nvar mix;\nvar bias_cv\n// clamp a number to within a range\nlet clampNumber = (num, a, b) => Math.max(Math.min(num, Math.max(a, b)), Math.min(a, b));\n\n// this is where the synthesis calculation occurs\nfunction process(block) {\n    // block.knobs[0] = 0.5\n\t// Knob ranges from -5 to 5 octaves\n\t// var pitch = block.knobs[0] * 10 - 5\n\t// Input follows 1V/oct standard\n    // pitch += block.inputs[0][0]\n    \n    // input 2 on the prototype module corresponds to the 2nd index of the block.inputs array, i.e. block.inputs[1]\n    amp = block.inputs[1][0]\n\n    // compare the amplitude of the two signal inputs\n    compare = [block.inputs[0][0], block.inputs[1][0]]\n    // get the max\n    max = Math.max(...compare)\n    // get the min\n    min = Math.min(...compare)\n\n    // the 1st knob on the prototype module will affect the biasing between input 1 or 2    \n    var bias = block.knobs[0] * 2 - 1\n    // bias_cv += bias * Math.pow(2, block.inputs[2][0]);\n    if(bias < 0.){\n        mix = clampNumber( ((Math.abs(bias) * min) + (bias * max) * max * block.inputs[2][0]), -10., 10.)\n    } else if (bias > 0.){\n        mix = clampNumber( ((bias * max) + ((bias * -1) * min) * min * block.inputs[2][0]), -10., 10.)\n    }\n\n    var freq = 1\n\t//display(\"Freq: \" + freq.toFixed(3) + \" Hz\")\n\n\t// Set all samples in output buffer\n\tvar deltaPhase = config.frameDivider * block.sampleTime * freq\n\tfor (var i = 0; i < block.bufferSize; i++) {\n\t\t// Accumulate phase\n\t\tphase += deltaPhase\n\t\t// Wrap phase around range [0, 1]\n        phase %= 1\n        display(\"Logic Module: max, min, mix\" + mix)\n        \n\t\t// Convert phase to sine output\n        // block.outputs[0][i] = Math.sin(2 * Math.PI * phase) * 5 * amp\n        block.outputs[0][i] = max\n        block.outputs[1][i] = min\n        block.outputs[2][i] = mix\n\t}\n}\n"
      },
      "pos": [
        38,
        1
      ]
    },
    {
      "id": 24,
      "plugin": "Fundamental",
      "version": "1.2.1",
      "model": "Scope",
      "params": [
        {
          "id": 0,
          "value": 0.0
        },
        {
          "id": 1,
          "value": 0.0
        },
        {
          "id": 2,
          "value": 0.0
        },
        {
          "id": 3,
          "value": 0.0
        },
        {
          "id": 4,
          "value": 7.72998714
        },
        {
          "id": 5,
          "value": 0.0
        },
        {
          "id": 6,
          "value": 0.0
        },
        {
          "id": 7,
          "value": 0.0
        }
      ],
      "rightModuleId": 28,
      "data": {
        "lissajous": 0,
        "external": 0
      },
      "pos": [
        56,
        1
      ]
    },
    {
      "id": 26,
      "plugin": "Fundamental",
      "version": "1.2.1",
      "model": "LFO2",
      "params": [
        {
          "id": 0,
          "value": 1.0
        },
        {
          "id": 1,
          "value": 0.0
        },
        {
          "id": 2,
          "value": 5.65299845
        },
        {
          "id": 3,
          "value": 0.232500702
        },
        {
          "id": 4,
          "value": 0.5
        }
      ],
      "rightModuleId": 6,
      "pos": [
        22,
        0
      ]
    },
    {
      "id": 25,
      "plugin": "Befaco",
      "version": "1.0.0",
      "model": "Rampage",
      "params": [
        {
          "id": 0,
          "value": 0.0
        },
        {
          "id": 1,
          "value": 0.0
        },
        {
          "id": 2,
          "value": 0.0
        },
        {
          "id": 3,
          "value": 0.815000355
        },
        {
          "id": 4,
          "value": 0.0
        },
        {
          "id": 5,
          "value": 0.0
        },
        {
          "id": 6,
          "value": 0.0
        },
        {
          "id": 7,
          "value": 0.576000631
        },
        {
          "id": 8,
          "value": 0.375999898
        },
        {
          "id": 9,
          "value": 0.0359999537
        },
        {
          "id": 10,
          "value": 0.0
        },
        {
          "id": 11,
          "value": 1.0
        },
        {
          "id": 12,
          "value": 0.5
        }
      ],
      "pos": [
        8,
        1
      ]
    },
    {
      "id": 27,
      "plugin": "Fundamental",
      "version": "1.2.1",
      "model": "LFO",
      "params": [
        {
          "id": 0,
          "value": 0.0
        },
        {
          "id": 1,
          "value": 0.0
        },
        {
          "id": 2,
          "value": 8.05599499
        },
        {
          "id": 3,
          "value": 0.0
        },
        {
          "id": 4,
          "value": 0.0
        },
        {
          "id": 5,
          "value": 0.5
        },
        {
          "id": 6,
          "value": 0.0
        }
      ],
      "pos": [
        0,
        0
      ]
    },
    {
      "id": 28,
      "plugin": "Fundamental",
      "version": "1.2.1",
      "model": "Scope",
      "params": [
        {
          "id": 0,
          "value": 0.0
        },
        {
          "id": 1,
          "value": 0.0
        },
        {
          "id": 2,
          "value": 0.0
        },
        {
          "id": 3,
          "value": 0.0
        },
        {
          "id": 4,
          "value": 14.0
        },
        {
          "id": 5,
          "value": 0.0
        },
        {
          "id": 6,
          "value": 0.0
        },
        {
          "id": 7,
          "value": 0.0
        }
      ],
      "leftModuleId": 24,
      "data": {
        "lissajous": 0,
        "external": 0
      },
      "pos": [
        69,
        1
      ]
    },
    {
      "id": 29,
      "plugin": "VCV-Recorder",
      "version": "1.0.1",
      "model": "Recorder",
      "params": [
        {
          "id": 0,
          "value": 1.0
        },
        {
          "id": 1,
          "value": 0.0
        }
      ],
      "data": {
        "format": "wav",
        "path": "/Users/mp/_gitshows/gitShow2/recording2.wav",
        "incrementPath": true,
        "sampleRate": 44100,
        "depth": 16,
        "bitRate": 320000
      },
      "pos": [
        86,
        1
      ]
    }
  ],
  "cables": [
    {
      "id": 281,
      "outputModuleId": 2,
      "outputId": 0,
      "inputModuleId": 1,
      "inputId": 0,
      "color": "#0986ad"
    },
    {
      "id": 282,
      "outputModuleId": 2,
      "outputId": 0,
      "inputModuleId": 1,
      "inputId": 1,
      "color": "#c9b70e"
    },
    {
      "id": 315,
      "outputModuleId": 26,
      "outputId": 0,
      "inputModuleId": 6,
      "inputId": 0,
      "color": "#0c8e15"
    },
    {
      "id": 318,
      "outputModuleId": 27,
      "outputId": 3,
      "inputModuleId": 25,
      "inputId": 2,
      "color": "#0c8e15"
    },
    {
      "id": 321,
      "outputModuleId": 26,
      "outputId": 0,
      "inputModuleId": 25,
      "inputId": 3,
      "color": "#c9b70e"
    },
    {
      "id": 326,
      "outputModuleId": 4,
      "outputId": 1,
      "inputModuleId": 7,
      "inputId": 0,
      "color": "#0c8e15"
    },
    {
      "id": 327,
      "outputModuleId": 27,
      "outputId": 2,
      "inputModuleId": 4,
      "inputId": 3,
      "color": "#c91847"
    },
    {
      "id": 324,
      "outputModuleId": 17,
      "outputId": 1,
      "inputModuleId": 4,
      "inputId": 0,
      "color": "#0986ad"
    },
    {
      "id": 329,
      "outputModuleId": 6,
      "outputId": 0,
      "inputModuleId": 4,
      "inputId": 1,
      "color": "#0c8e15"
    },
    {
      "id": 330,
      "outputModuleId": 4,
      "outputId": 1,
      "inputModuleId": 2,
      "inputId": 1,
      "color": "#c91847"
    },
    {
      "id": 319,
      "outputModuleId": 25,
      "outputId": 6,
      "inputModuleId": 17,
      "inputId": 0,
      "color": "#c91847"
    },
    {
      "id": 320,
      "outputModuleId": 25,
      "outputId": 7,
      "inputModuleId": 17,
      "inputId": 1,
      "color": "#0986ad"
    },
    {
      "id": 334,
      "outputModuleId": 4,
      "outputId": 0,
      "inputModuleId": 25,
      "inputId": 5,
      "color": "#c9b70e"
    },
    {
      "id": 336,
      "outputModuleId": 17,
      "outputId": 2,
      "inputModuleId": 2,
      "inputId": 2,
      "color": "#c91847"
    },
    {
      "id": 335,
      "outputModuleId": 17,
      "outputId": 2,
      "inputModuleId": 24,
      "inputId": 1,
      "color": "#0c8e15"
    },
    {
      "id": 339,
      "outputModuleId": 17,
      "outputId": 1,
      "inputModuleId": 24,
      "inputId": 0,
      "color": "#0c8e15"
    },
    {
      "id": 341,
      "outputModuleId": 2,
      "outputId": 1,
      "inputModuleId": 29,
      "inputId": 2,
      "color": "#0986ad"
    },
    {
      "id": 342,
      "outputModuleId": 2,
      "outputId": 2,
      "inputModuleId": 29,
      "inputId": 3,
      "color": "#c9b70e"
    }
  ]
}